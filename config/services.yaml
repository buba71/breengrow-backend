# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $publicPath: '%kernel.project_dir%/public/'

    #App\Application\Services\GetOrdersManager\OrderStrategyManager:
    #    public: true

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    # App\:
    #    resource: '../src/*'
    #    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\Infrastructure\Symfony\:
        resource: '../src/Infrastructure/Symfony/*'
        exclude: '../src/Infrastructure/Symfony/{DependencyInjection,Doctrine,Migrations}'

    App\:
        resource: '../src/*'
        exclude:
            
    # Define Api controllers
    App\Presentation\Api\Handler\:
        resource: '../src/Presentation/Api/Handler'
        tags: ['controller.service_arguments']

    App\Infrastructure\Symfony\Security\SetApiAuthenticationSuccessResponse:
        arguments: ['%lexik_jwt_authentication.token_ttl%']
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: OnAuthenticationSuccess}

    # Message handlers
    # App\Infrastructure\Services\InvoiceServices\Presentation\Handler\InvoicePdfGenerator:
    #    tags:
    #        - { name: messenger.message_handler }

    App\Application\Services\InvoiceService\InvoiceGeneratorService:
        tags:
            - { name: messenger.message_handler }


    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    # App\Controller\:
    #    resource: '../src/Controller'
    #    tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
